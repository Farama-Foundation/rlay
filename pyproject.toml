[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "rlay"
description = "A new Farama library"
readme = "README.md"
requires-python = ">= 3.8"
authors = [{ name = "Farama Foundation", email = "contact@farama.org" }]
license = { text = "MIT License" }
keywords = ["Reinforcement Learning", "game", "RL", "AI", "rlay"]
classifiers = [
    "Development Status :: 4 - Beta",  # change to `5 - Production/Stable` when ready
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    'Intended Audience :: Science/Research',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
]
dependencies = [
    "numpy >=1.21.0",
    "gymnasium>=0.29.1",
    "grpcio~=1.60.0",
    "grpcio-tools~=1.60.0",
    "tqdm~=4.64.1"
]
dynamic = ["version"]

[tool.hatch.version]
path = "rlay/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/rlay",
]

# Package ######################################################################

[project.optional-dependencies]
# Update dependencies in `all` if any are added or removed
all = [
]
testing = [
    "pytest ==7.1.3",
]

[project.urls]
Homepage = "https://farama.org"
Repository = "https://github.com/Farama-Foundation/rlay"
Documentation = "https://rlay.farama.org"
"Bug Report" = "https://github.com/Farama-Foundation/rlay/issues"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["rlay", "rlay.*"]

[tool.setuptools.package-data]
rlay = [
    "py.typed",
]

# Linters and Test tools #######################################################

[tool.black]
safe = true

[tool.isort]
atomic = true
profile = "black"
src_paths = ["rlay", "tests", "docs/scripts"]
extra_standard_library = ["typing_extensions"]
indent = 4
lines_after_imports = 2
multi_line_output = 3

[tool.pyright]
include = ["rlay/**", "tests/**"]
exclude = ["**/node_modules", "**/__pycache__"]
strict = []

typeCheckingMode = "basic"
pythonVersion = "3.8"
pythonPlatform = "All"
typeshedPath = "typeshed"
enableTypeIgnoreComments = true

# This is required as the CI pre-commit does not download the module (i.e. numpy, pygame, box2d)
#   Therefore, we have to ignore missing imports
reportMissingImports = "none"
# Some modules are missing type stubs, which is an issue when running pyright locally
reportMissingTypeStubs = false
# For warning and error, will raise an error when
reportInvalidTypeVarUse = "none"

# reportUnknownMemberType = "warning"  # -> raises 6035 warnings
# reportUnknownParameterType = "warning"  # -> raises 1327 warnings
# reportUnknownVariableType = "warning"  # -> raises 2585 warnings
# reportUnknownArgumentType = "warning"  # -> raises 2104 warnings
reportGeneralTypeIssues = "none"  # -> commented out raises 489 errors
reportUntypedFunctionDecorator = "none"  # -> pytest.mark.parameterize issues

reportPrivateUsage = "warning"
reportUnboundVariable = "warning"

[tool.pytest.ini_options]
filterwarnings = []
